<div class="front-end-guidelines wrapper">

    <div class="page-content has-aside">

        {{> Header }}

        {{> SideNav }}

        <div class="main-col">

            <section class="pl-pattern" id="syntax-and-formatting">
                <div class="pl-pattern-description">
                    <h1>
                        File Structure
                    </h1>
                    <div class="pl-divider"></div>
                </div>

                <div class="container">
                    <p>
                        The Ushahidi Platform front-end is served via the <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets">assets</a></span> folder. Production files are compiled via <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/blob/master/gulpfile.js">gulpfile.js</a></span>.
                    </p>

                    <h2>HTML/Handlebars</h2>
                    <p>
                        HTML templates are compiled via Handlebars. A .html template must be created in the <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/5_layouts">pattern-library/_layouts</a></span> directory, then a .hbs template must be created in the <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets/templates">assets/templates</a></span> directory. Handlebars will then compile the production html into the <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets/html">assets/html</a></span> directory.
                    </p>

                    <div class="pl-divider"></div>

                    <h2>Sass/CSS</h2>
                    <p>
                        Each UI pattern gets it's own .scss file, then each of those files are organized by their respective sections (Atoms/Molecules/Organisms etc...) and @imported within the <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/blob/master/assets/sass/style.scss">style.scss</a></span> file.
                    </p>

                    <p>
                        The CSS is then compiled from <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/blob/master/assets/sass/style.scss">assets/sass/style.scss</a></span> to <span class="code">assets/css/style.css</a></span>.
                    </p>

                    <div class="pl-divider"></div>

                    <h2>Javascript</h2>
                    <p>
                        Each Javascript pattern gets it's own .js file within the <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets/js/custom">custom</a></span> directory.
                    </p>

                    <p>
                        The Javascript is then compiled from <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets/js/custom">assets/js/custom</a></span> to <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets/js/app.js">assets/js/app.js</a></span>.
                    </p>

                    <p>
                        PL specfic javascript follows the same pattern but originates from <span class="code"><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/assets/js/pattern-library">assets/js/pattern-library</a></span>
                    </p>

                    <div class="pl-divider"></div>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/1_atoms">Atoms</a></h3>
                    <p>
                        Atoms are the components that make up molecules. Oftentimes, an atom can't even stand on its own as a UI element (for example, a color) but it is required to create other things. All atoms are just one html element.
                    </p>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/2_molecules">Molecules</a></h3>
                    <p>
                        Molecules are made up of more than one html element, but usually do not stand on their own. Molecules are combined to create organisms.
                    </p>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/3_organisms">Organisms</a></h3>
                    <p>
                        Organisms are standalone UI blocks, each of them complete and serving a unique purpose. Multiple organisms can create a block.
                    </p>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/4_templates">Templates</a></h3>
                    <p>
                        Templates are full components that can be combined to create layouts. While a block can contain multiple organisms, including repeating organisms, a block is never repeated in a layout.
                    </p>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/5_layouts">Layouts</a></h3>
                    <p>
                        Layouts are the structures in which templates are placed to create pages. Each layout can be reused to create unique pages, depending on what templates are placed in them.
                    </p>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/partials">Partials</a></h3>
                    <p>
                        Partials are files with blocks of code that appear in more than one place throughout the Pattern Library.
                    </p>

                    <h3><a href="https://github.com/ushahidi/platform-pattern-library/tree/master/pattern-library/front-end-guidelines">Front-End Guidelines</a></h3>
                    <p>
                        The Front-end-guidelines are files specific to the docs you are currently reading.
                    </p>

                </div>
            </section>

        </div>

    </div>

</div>
